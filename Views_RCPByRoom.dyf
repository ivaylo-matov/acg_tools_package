{
  "Uuid": "f2c74e39-abfe-4d87-aa73-7dec728cccc2",
  "IsCustomNode": true,
  "Category": "ACG Tools",
  "Description": "Taken from Archi-lab and updated",
  "Name": "Views.RCP By Room",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Copyright(c) 2015, Konrad K Sobon\n# @arch_laboratory, http://archi-lab.net\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import Element wrapper extension methods\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Import geometry conversion extension methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nimport System\nfrom System import Array\nfrom System.Collections.Generic import *\n\nimport sys\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\n\n#The inputs to this node will be stored as a list in the IN variable.\ndataEnteringNode = IN\n\nif isinstance(IN[0], list):\n\trooms = UnwrapElement(IN[0])\nelse:\n\trooms = [UnwrapElement(IN[0])]\nnamePrefix = IN[1]\nbboxOffset = IN[2]\nrunMe = IN[3]\n\ndef OffsetBBox(bbox, offset):\n\tbboxMinX = bbox.Min.X - offset\n\tbboxMinY = bbox.Min.Y - offset\n\tbboxMinZ = bbox.Min.Z - offset\n\tbboxMaxX = bbox.Max.X + offset\n\tbboxMaxY = bbox.Max.Y + offset\n\tbboxMaxZ = bbox.Max.Z + offset\n\tnewBbox = BoundingBoxXYZ()\n\tnewBbox.Min = XYZ(bboxMinX, bboxMinY, bboxMinZ)\n\tnewBbox.Max = XYZ(bboxMaxX, bboxMaxY, bboxMaxZ)\n\treturn newBbox\n\ntry:\n\terrorReport = None\n\tif runMe:\n\t\tviewTypes = FilteredElementCollector(doc).OfClass(ViewFamilyType)\n\t\tfor i in viewTypes:\n\t\t\tif i.ViewFamily == ViewFamily.CeilingPlan:\n\t\t\t\tviewTypeId = i.Id\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tcontinue\n\t\t\n\t\texistingPlans = FilteredElementCollector(doc).OfClass(View).ToElements()\n\t\t\n\t\texistingPlanNames, existingPlanElements = [], []\n\t\tfor i in existingPlans:\n\t\t\tif not i.IsTemplate:\n\t\t\t\tif i.ViewType == ViewType.CeilingPlan:\n\t\t\t\t\texistingPlanNames.append(i.ToDSType(True).Name)\n\t\t\t\t\texistingPlanElements.append(i)\n\t\t\t\t\t\n\t\t# Start Transaction\n\t\tTransactionManager.Instance.EnsureInTransaction(doc)\n\t\t\n\t\tceilingPlans = []\n\t\tfor i in rooms:\n\t\t\tlevelId = i.LevelId\n\t\t\tbbox = i.BoundingBox[doc.ActiveView]\n\t\t\tnewBbox = OffsetBBox(bbox, bboxOffset)\n\t\t\tviewName = namePrefix + \"-\" + i.get_Parameter(BuiltInParameter.ROOM_NUMBER).AsString() + \"-\" + i.get_Parameter(BuiltInParameter.ROOM_NAME).AsString()\n\t\t\tif viewName in existingPlanNames:\n\t\t\t\tview = existingPlanElements[existingPlanNames.index(viewName)]\n\t\t\t\tview.CropBox = newBbox\n\t\t\t\tview.CropBoxActive = True\n\t\t\t\tview.CropBoxVisible = False\n\t\t\t\tceilingPlans.append(view)\n\t\t\telse:\n\t\t\t\tnewView = ViewPlan.Create(doc, viewTypeId, levelId)\n\t\t\t\tnewView.Name = viewName\n\t\t\t\tnewView.CropBox = newBbox\n\t\t\t\tnewView.CropBoxActive = True\n\t\t\t\tnewView.CropBoxVisible = False\n\t\t\t\tceilingPlans.append(newView)\n\t\n\t\t# End Transaction\n\t\tTransactionManager.Instance.TransactionTaskDone()\n\telse:\n\t\terrorReport = \"Run Me set to False\"\nexcept:\n\t# if error accurs anywhere in the process catch it\n\timport traceback\n\terrorReport = traceback.format_exc()\n\n#Assign your output to the OUT variable\nif errorReport == None:\n\tOUT = ceilingPlans\nelse:\n\tOUT = errorReport\n",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "c98eb81da0ee4c3da0d0bb3d92cda6ec",
      "Inputs": [
        {
          "Id": "ca8139f8f5ec4561a95d6df871b9d04a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6469accca7c34d0499bd7acd546f5e0e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fecb1307871846a0b3eb343841365018",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7397adf0d750495b808a6a484e4a80d2",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3789a23e2174c7b83fde2c8730cec2c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "rcp_view",
      "Id": "9aced14c69a54dd2a897a7fbf453b9aa",
      "Inputs": [
        {
          "Id": "c5108189a48d4388a23ffc972ae171b9",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "room",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "List of rooms to be processed"
      },
      "Id": "faeca7b936d644e093f6f2a51097f37e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3a6e6124e1fe41dc91db914745e5ef30",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "name_prefix",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": "\"RDS\"",
        "Description": "Prefix for the name of the new views"
      },
      "Id": "23bbb92657c54b078a77edcb017e1af2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f5d3bf2d55ec4118b6cab6c70e7f85b4",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "offset",
        "TypeName": "int",
        "TypeRank": 0,
        "DefaultValue": "4",
        "Description": "Offset from the room boundary lines\nto the crop region lines (in mm)"
      },
      "Id": "397f22cd385743969659f8758b4aea93",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4b9e49b21a23416186cc78456941e1ab",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "run_it",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "d9ae44004ce642a8be8ca037f32268ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "51bdcaa483884cfd8b970249ed19e215",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "d3789a23e2174c7b83fde2c8730cec2c",
      "End": "c5108189a48d4388a23ffc972ae171b9",
      "Id": "c0e1869a93f24c66bdb8dd3a6f026dd1",
      "IsHidden": "False"
    },
    {
      "Start": "3a6e6124e1fe41dc91db914745e5ef30",
      "End": "ca8139f8f5ec4561a95d6df871b9d04a",
      "Id": "e543f5ff965b4fb593e0f68cb027050e",
      "IsHidden": "False"
    },
    {
      "Start": "f5d3bf2d55ec4118b6cab6c70e7f85b4",
      "End": "6469accca7c34d0499bd7acd546f5e0e",
      "Id": "182e8b27f8004e69af0b561dafbe7581",
      "IsHidden": "False"
    },
    {
      "Start": "4b9e49b21a23416186cc78456941e1ab",
      "End": "fecb1307871846a0b3eb343841365018",
      "Id": "e3fdba010a604543b55fa31e9b5814b5",
      "IsHidden": "False"
    },
    {
      "Start": "51bdcaa483884cfd8b970249ed19e215",
      "End": "7397adf0d750495b808a6a484e4a80d2",
      "Id": "10a5ed5e8ce140198f1be079977bf002",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.17.1.4055",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "c98eb81da0ee4c3da0d0bb3d92cda6ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 893.44450266593151,
        "Y": 277.32432774434415
      },
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "9aced14c69a54dd2a897a7fbf453b9aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1097.9487928217582,
        "Y": 281.07568749237663
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "faeca7b936d644e093f6f2a51097f37e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 465.31667010584977,
        "Y": 139.69074277379156
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "23bbb92657c54b078a77edcb017e1af2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 410.31667010584982,
        "Y": 271.61192764394451
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "397f22cd385743969659f8758b4aea93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 433.31667010584982,
        "Y": 417.86527524874253
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "d9ae44004ce642a8be8ca037f32268ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 566.31667010584977,
        "Y": 572.60820953107054
      }
    ],
    "Annotations": [],
    "X": -366.71485375475925,
    "Y": -22.703381050298503,
    "Zoom": 0.98313155107616124
  }
}