{
  "Uuid": "0ca08dd3-1aff-4351-ac08-68036f995d4e",
  "IsCustomNode": true,
  "Category": "ACG Tools",
  "Description": "",
  "Name": "Quick Audit.Groups Check",
  "ElementResolver": {
    "ResolutionMap": {
      "DSCore.Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "*Results Naming",
      "Id": "2bc995181f87490e8119ab9f5f5ef07b",
      "Inputs": [
        {
          "Id": "80e5d45d44574f2088214df3ab97ddf1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "*Results Nesting",
      "Id": "ad9ec67be4aa43898671b33f789a5788",
      "Inputs": [
        {
          "Id": "5d5c1fe05d244c54bfba7346bfbd9a0b",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "5619da336ed349aa99341cd80856f0dc",
      "Inputs": [
        {
          "Id": "beda0c1b1c0d4e73bb0d7b60a0fe4ea6",
          "Name": "list",
          "Description": "List to get the rest of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "427341edbcad435a814ef70fe276d0f0",
          "Name": "rest",
          "Description": "Rest of the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the first item from the given list.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "154238b589b3486ea3e9c58591488c44",
      "Inputs": [
        {
          "Id": "f3f4481d1a724ce49f63f677324ece8d",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cc7108d5e4e4518a0ddb74fb5e0a562",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[5];",
      "Id": "55a6b07c62f8415f827d1a200f48dce4",
      "Inputs": [
        {
          "Id": "1641e5639c6f4111a7d4cb1efe9bbc3c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ab9c99004b440b09c95567d8af626ae",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('RevitAPI')\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\nfrom operator import itemgetter\n\ndoc = DocumentManager.Instance.CurrentDBDocument\n\ngroupTypes = FilteredElementCollector(doc).OfClass(GroupType)\n\noutput = []\nout = []\ngroupNames = []\ngroupInstances = []\ngroupFamily = []\nunconHeight = []\ngroupNested = [] \nnestedNames = []\nnestedGroups = []\nrestoreExcluded = []\nelements = []\noutput = []\n\nif IN[0]:\n\tTransactionManager.Instance.EnsureInTransaction(doc)\n\t\n\tfor groupType in groupTypes:\n\t\t\n\t\tgroupNames.append(groupType.LookupParameter(\"Type Name\").AsString())\n\t\tgroupInstances.append(groupType.Groups.Size)\n\t\tgroupFamily.append(groupType.FamilyName.ToString())\n\t\tif groupType.Groups.Size>0:\n\t\t\tgroupSet = groupType.Groups.ForwardIterator()\n\t\t\tnumOfMem = 0\n\t\t\texcluded = \"False\"\n\t\t\tuncon = \"False\"\n\t\t\tnested = \"False\"\n\t\t\twhile groupSet.MoveNext():\n\t\t\t\tnames = []\n\t\t\t\tmembersIds = groupSet.Current.GetMemberIds()\n\t\t\t\tfor id in membersIds:\n\t\t\t\t\titem = doc.GetElement(id)\n\t\t\t\t\tif item.Category != None:\n\t\t\t\t\t\tif item.Category.Name == \"Walls\":\n\t\t\t\t\t\t\ttry:\n\t\t\t\t\t\t\t\tif item.LookupParameter(\"Top Constraint\").AsString() == \"Unconnected\":\n\t\t\t\t\t\t\t\t\tuncon = \"True\"\n\t\t\t\t\t\t\texcept:\n\t\t\t\t\t\t\t\tpass\n\t\t\t\t\t\n\t\t\t\t\t\tif item.Category.Name == \"Model Groups\" or item.Category.Name == \"Detail Groups\":\n\t\t\t\t\t\t\tnested = \"True\"\n\t\t\t\t\t\t\tnames.append(item.Name)\n\t\t\t\t\n\t\t\t\tif numOfMem == 0:\n\t\t\t\t\tnumOfMem = len(membersIds)\n\t\t\t\telif numOfMem < len(membersIds):\n\t\t\t\t\tnumOfMem = len(membersIds)\n\t\t\t\t\texcluded = \"True\"\n\t\t\t\telif numOfMem > len(membersIds):\n\t\t\t\t\texcluded = \"True\"\n\t\t\trestoreExcluded.append(excluded)\n\t\t\tunconHeight.append(uncon)\n\t\t\tgroupNested.append(nested)\n\t\t\tnestedNames.append(names)\n\t\telse:\n\t\t\trestoreExcluded.append(\"No instances in project\")\n\t\t\t\n\t\t\t\n\t\t\n\toutput.append(groupNames)\n\toutput.append(groupFamily)\n\toutput.append(groupInstances)\n\toutput.append(restoreExcluded)\n\toutput.append(unconHeight)\n\toutput.append(groupNested)\n\t\n\t\n\toutput = map(list, zip(*output))\n\tfor i in xrange(len(output)):\n\t\ttemp = output[i]\n\t\tfor item in nestedNames[i]:\n\t\t\tif item != None:\n\t\t\t\ttemp.append(item)\n\t\tout.append(temp)\n\t\t\n\t\n\tout = sorted(out, key=itemgetter(0))\t\n\theader = [\"Group name\", \"Type of group\", \"Number of instances\", \"Restore excluded\", \"Unconnected height\", \"Groups nested\", \"Nested groups names\"]\n\tout.insert(0,header)\n\tOUT = out\n\n\t#OUT = nestedNames\n\tTransactionManager.Instance.TransactionTaskDone()\nelse: \n\tOUT = \"Set RunIt to true\"\n\t\n\n",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "357d6280753045b3bdce02415a435e23",
      "Inputs": [
        {
          "Id": "9bec484ccce84410ab7c4dcddc9018ce",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3496b24aafad4aeb87d4b4687eb12a19",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.Math.Round(nonCompliant / all *100);",
      "Id": "bc9fa7009dd945858e877c6c71da0c06",
      "Inputs": [
        {
          "Id": "8ca800f4e3ff44ef8b2f771883529abf",
          "Name": "nonCompliant",
          "Description": "nonCompliant",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53a42a2576504bab897521b6de9959c7",
          "Name": "all",
          "Description": "all",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "705bb6c5e0af458ab9f950f86f6ce661",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "275d6cb278b642a89d09ccc79f0919dd",
      "Inputs": [
        {
          "Id": "a497287de032427e93580ce7f3c777a5",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d006833b6694ca38a8f94a5a75a2c9c",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport clr\r\nimport sys\r\nsys.path.append('C:\\Program Files (x86)\\IronPython 2.7\\Lib')\r\nimport System\r\nfrom System import Array\r\nfrom System.Collections.Generic import *\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nimport Autodesk \r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.UI import *\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication \r\napp = uiapp.Application \r\nuidoc = uiapp.ActiveUIDocument\r\n\r\n\r\ngroupNames = []\r\nwithACG = []\r\nwithOutACG = []\r\ncompliant = []\r\nnonCompliant = []\r\n\r\n# collect all elements to be processed\r\ngroupTypes = FilteredElementCollector(doc).OfClass(GroupType)\r\n\r\n# collect the names of all elements\r\nfor i in groupTypes:\r\n\tgroupNames.append(i.LookupParameter('Type Name').AsString())\r\n\t\t\r\n# check if the name starts with \"ACG\"\r\nfor i in groupNames:\r\n\tif i.startswith('ACG-'):\r\n\t\twithACG.append(i)\r\n\telse:\r\n\t\twithOutACG.append(i)\r\n\t\t\r\n# check if the ACG families have valid code\r\nfor i in withACG:\r\n\ttry:\r\n\t\trest = i[8:]\r\n\t\tif rest.startswith('-'):\r\n\t\t\tcompliant.append(i)\r\n\t\telse:\r\n\t\t\tnonCompliant.append(i)\r\n\texcept:\r\n\t\tcontinue\r\n\t\t\r\n# check if the non ACG families have valid codes\r\nfor i in withOutACG:\r\n\ttry:\r\n\t\tif i[2] == '-' and i[7] == '-':\r\n\t\t\tcompliant.append(i)\r\n\t\telif i[3] == '-' and  i[8] == '-':\r\n\t\t\tcompliant.append(i)\t\t\r\n\t\telif i[4] == '-' and  i[9] == '-':\r\n\t\t\tcompliant.append(i)\r\n\t\telse:\r\n\t\t\tnonCompliant.append(i)\r\n\texcept:\r\n\t\tcontinue\r\n\r\n# calculate percentage\r\nresult = float(len(nonCompliant))/float(len(groupNames))*100\r\nresult = round(result)\r\n\r\nOUT = [compliant, nonCompliant, result]",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1b1d53bf341444cabbd9610a2da9056f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0fc58d77cdb549898e70908b3be3a308",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[2];\nx[1];",
      "Id": "bdbeac1a59a6460eb64b2bca4d9b51a7",
      "Inputs": [
        {
          "Id": "1178ff924e914aefae167bd86da9dab5",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20e249fc9bd74ddc8cc92e185ac98543",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "059496a67613424895cb6e3de268ccbe",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "3bb4ca9842bc4903906eaa890405d3b4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f43ba4d148e14385947baea02f6f2497",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "v == \"True\";",
      "Id": "243bf64db18d430faf772271577f03e8",
      "Inputs": [
        {
          "Id": "b22b0ca935ec41378d8518992a429ddf",
          "Name": "v",
          "Description": "v",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "132ac5f3d80646399cbabce9e874eb39",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "5300d452a2cf481995944c96c537cecd",
      "Inputs": [
        {
          "Id": "2bf357db388f4936925fb37d4ac9f658",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c386332a8fda4d85afefcb227dd5cb19",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "*List_Naming",
      "Id": "8ad8affb941246f597b80bb571b16be2",
      "Inputs": [
        {
          "Id": "2ce7a67f0e0645368e97a205a87e1c16",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "427341edbcad435a814ef70fe276d0f0",
      "End": "b22b0ca935ec41378d8518992a429ddf",
      "Id": "f95ad11ca0d441e7bb4fbcf4c24f1cd0",
      "IsHidden": "False"
    },
    {
      "Start": "427341edbcad435a814ef70fe276d0f0",
      "End": "2bf357db388f4936925fb37d4ac9f658",
      "Id": "f8c838d3ced44d92b2bd25e284d01f9b",
      "IsHidden": "False"
    },
    {
      "Start": "4cc7108d5e4e4518a0ddb74fb5e0a562",
      "End": "1641e5639c6f4111a7d4cb1efe9bbc3c",
      "Id": "d8043fc1d4b44953a9a4f5f43d73e694",
      "IsHidden": "False"
    },
    {
      "Start": "1ab9c99004b440b09c95567d8af626ae",
      "End": "beda0c1b1c0d4e73bb0d7b60a0fe4ea6",
      "Id": "793bbdd4c3e14ccf813c7cfb8b2c3f70",
      "IsHidden": "False"
    },
    {
      "Start": "3496b24aafad4aeb87d4b4687eb12a19",
      "End": "f3f4481d1a724ce49f63f677324ece8d",
      "Id": "2c02824691d34bdeaf9d2130cb67acad",
      "IsHidden": "False"
    },
    {
      "Start": "705bb6c5e0af458ab9f950f86f6ce661",
      "End": "5d5c1fe05d244c54bfba7346bfbd9a0b",
      "Id": "70cf3172cbf94d8e863bbecd04b60056",
      "IsHidden": "False"
    },
    {
      "Start": "6d006833b6694ca38a8f94a5a75a2c9c",
      "End": "8ca800f4e3ff44ef8b2f771883529abf",
      "Id": "9b9306d5760847759d40e36f48dd25a3",
      "IsHidden": "False"
    },
    {
      "Start": "0fc58d77cdb549898e70908b3be3a308",
      "End": "1178ff924e914aefae167bd86da9dab5",
      "Id": "9b4642dd3c1f4666944cc0bed4d3abde",
      "IsHidden": "False"
    },
    {
      "Start": "20e249fc9bd74ddc8cc92e185ac98543",
      "End": "80e5d45d44574f2088214df3ab97ddf1",
      "Id": "3d485b47cc584f828938cca44cf95e94",
      "IsHidden": "False"
    },
    {
      "Start": "059496a67613424895cb6e3de268ccbe",
      "End": "2ce7a67f0e0645368e97a205a87e1c16",
      "Id": "e95367a55b9044909eaab700b8aebafe",
      "IsHidden": "False"
    },
    {
      "Start": "f43ba4d148e14385947baea02f6f2497",
      "End": "9bec484ccce84410ab7c4dcddc9018ce",
      "Id": "8e66d424be7d47398d73559a9f9b4351",
      "IsHidden": "False"
    },
    {
      "Start": "132ac5f3d80646399cbabce9e874eb39",
      "End": "a497287de032427e93580ce7f3c777a5",
      "Id": "9c432b17a82248d4a2d8ee8a1a9b61ea",
      "IsHidden": "False"
    },
    {
      "Start": "c386332a8fda4d85afefcb227dd5cb19",
      "End": "53a42a2576504bab897521b6de9959c7",
      "Id": "731192219f46459394ed2a3ebdc381d8",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.17.1.4055",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -14.331960678100586,
      "EyeY": 76.704374313354492,
      "EyeZ": 38.738933563232422,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "2bc995181f87490e8119ab9f5f5ef07b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3970.215643142411,
        "Y": 4073.7984074763463
      },
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "ad9ec67be4aa43898671b33f789a5788",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3963.4303222461322,
        "Y": 3749.0801261938036
      },
      {
        "Name": "List.RestOfItems",
        "ShowGeometry": true,
        "Id": "5619da336ed349aa99341cd80856f0dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2606.10786561417,
        "Y": 3701.72071683275
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "154238b589b3486ea3e9c58591488c44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2212.47159988906,
        "Y": 3701.72071683275
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "55a6b07c62f8415f827d1a200f48dce4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2426.42605994653,
        "Y": 3701.72071683275
      },
      {
        "Name": "Groups Audit",
        "ShowGeometry": true,
        "Id": "357d6280753045b3bdce02415a435e23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2007.51927417742,
        "Y": 3701.72071683275
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bc9fa7009dd945858e877c6c71da0c06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3390.1820440860361,
        "Y": 3749.506304732085
      },
      {
        "Name": "List.CountTrue",
        "ShowGeometry": true,
        "Id": "275d6cb278b642a89d09ccc79f0919dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3088.3567152708779,
        "Y": 3832.2410257938982
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "1b1d53bf341444cabbd9610a2da9056f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3567.647688313149,
        "Y": 4071.7015286122496
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bdbeac1a59a6460eb64b2bca4d9b51a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3775.6947378350969,
        "Y": 4072.2897801238687
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3bb4ca9842bc4903906eaa890405d3b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1829.6528629044,
        "Y": 3701.72071683275
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "243bf64db18d430faf772271577f03e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2850.3407451294797,
        "Y": 3831.0638723113279
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "5300d452a2cf481995944c96c537cecd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3101.3567152708779,
        "Y": 3700.7057891572281
      },
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "8ad8affb941246f597b80bb571b16be2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3991.6015495846523,
        "Y": 4210.71354322099
      }
    ],
    "Annotations": [
      {
        "Id": "e4505f2a34bb498bac7318d60994b58a",
        "Title": "Process",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5619da336ed349aa99341cd80856f0dc",
          "154238b589b3486ea3e9c58591488c44",
          "55a6b07c62f8415f827d1a200f48dce4",
          "357d6280753045b3bdce02415a435e23",
          "275d6cb278b642a89d09ccc79f0919dd",
          "3bb4ca9842bc4903906eaa890405d3b4",
          "243bf64db18d430faf772271577f03e8",
          "5300d452a2cf481995944c96c537cecd"
        ],
        "HasNestedGroups": false,
        "Left": 1819.6528629044,
        "Top": 3641.7057891572281,
        "Width": 1458.7038523664778,
        "Height": 322.53523663667011,
        "FontSize": 24.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 3700.7057891572281,
        "InitialHeight": 293.53523663667011,
        "TextblockHeight": 49.0,
        "Background": "#FFFFA500"
      },
      {
        "Id": "191563e9e2ab4cb1a071cd3ec0a7758a",
        "Title": "Process",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2bc995181f87490e8119ab9f5f5ef07b",
          "1b1d53bf341444cabbd9610a2da9056f",
          "bdbeac1a59a6460eb64b2bca4d9b51a7",
          "8ad8affb941246f597b80bb571b16be2",
          "8e27b3822c824dc682e03fcd7090c7da"
        ],
        "HasNestedGroups": false,
        "Left": 3557.647688313149,
        "Top": 3954.9479511728414,
        "Width": 626.56795482926191,
        "Height": 387.76559204814839,
        "FontSize": 24.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 4013.9479511728414,
        "InitialHeight": 358.76559204814839,
        "TextblockHeight": 49.0,
        "Background": "#FFFFA500"
      },
      {
        "Id": "909ead2007964f61b7e0c86418bcdff2",
        "Title": "Assing",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ad9ec67be4aa43898671b33f789a5788",
          "bc9fa7009dd945858e877c6c71da0c06"
        ],
        "HasNestedGroups": false,
        "Left": 3380.1820440860361,
        "Top": 3690.0801261938036,
        "Width": 805.24827816009611,
        "Height": 221.42617853828142,
        "FontSize": 24.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 3749.0801261938036,
        "InitialHeight": 192.42617853828142,
        "TextblockHeight": 49.0,
        "Background": "#FF8080FF"
      },
      {
        "Id": "8e27b3822c824dc682e03fcd7090c7da",
        "Title": "check naming",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3799.5037551387477,
        "Top": 4021.9479511728414,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 219.25565503152734,
    "Y": -446.10507195356161,
    "Zoom": 0.2580605694018604
  }
}